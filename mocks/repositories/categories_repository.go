// Code generated by MockGen. DO NOT EDIT.
// Source: repositories.go
//
// Generated by this command:
//
//	mockgen -source=repositories.go -destination=../../mocks/repositories/categories_repository.go -exclude_interfaces=MastersRepository,TagsRepository,ToysRepository -package=mockrepositories
//

// Package mockrepositories is a generated GoMock package.
package mockrepositories

import (
	reflect "reflect"

	entities "github.com/DKhorkov/hmtm-toys/pkg/entities"
	gomock "go.uber.org/mock/gomock"
)

// MockCategoriesRepository is a mock of CategoriesRepository interface.
type MockCategoriesRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCategoriesRepositoryMockRecorder
	isgomock struct{}
}

// MockCategoriesRepositoryMockRecorder is the mock recorder for MockCategoriesRepository.
type MockCategoriesRepositoryMockRecorder struct {
	mock *MockCategoriesRepository
}

// NewMockCategoriesRepository creates a new mock instance.
func NewMockCategoriesRepository(ctrl *gomock.Controller) *MockCategoriesRepository {
	mock := &MockCategoriesRepository{ctrl: ctrl}
	mock.recorder = &MockCategoriesRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCategoriesRepository) EXPECT() *MockCategoriesRepositoryMockRecorder {
	return m.recorder
}

// GetAllCategories mocks base method.
func (m *MockCategoriesRepository) GetAllCategories() ([]*entities.Category, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllCategories")
	ret0, _ := ret[0].([]*entities.Category)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllCategories indicates an expected call of GetAllCategories.
func (mr *MockCategoriesRepositoryMockRecorder) GetAllCategories() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllCategories", reflect.TypeOf((*MockCategoriesRepository)(nil).GetAllCategories))
}

// GetCategoryByID mocks base method.
func (m *MockCategoriesRepository) GetCategoryByID(id uint32) (*entities.Category, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCategoryByID", id)
	ret0, _ := ret[0].(*entities.Category)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCategoryByID indicates an expected call of GetCategoryByID.
func (mr *MockCategoriesRepositoryMockRecorder) GetCategoryByID(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCategoryByID", reflect.TypeOf((*MockCategoriesRepository)(nil).GetCategoryByID), id)
}
