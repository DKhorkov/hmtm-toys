// Code generated by MockGen. DO NOT EDIT.
// Source: repositories.go
//
// Generated by this command:
//
//	mockgen -source=repositories.go -destination=../../mocks/repositories/tags_repository.go -exclude_interfaces=MastersRepository,CategoriesRepository,ToysRepository -package=mockrepositories
//

// Package mockrepositories is a generated GoMock package.
package mockrepositories

import (
	reflect "reflect"

	entities "github.com/DKhorkov/hmtm-toys/internal/entities"
	gomock "go.uber.org/mock/gomock"
)

// MockTagsRepository is a mock of TagsRepository interface.
type MockTagsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTagsRepositoryMockRecorder
	isgomock struct{}
}

// MockTagsRepositoryMockRecorder is the mock recorder for MockTagsRepository.
type MockTagsRepositoryMockRecorder struct {
	mock *MockTagsRepository
}

// NewMockTagsRepository creates a new mock instance.
func NewMockTagsRepository(ctrl *gomock.Controller) *MockTagsRepository {
	mock := &MockTagsRepository{ctrl: ctrl}
	mock.recorder = &MockTagsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTagsRepository) EXPECT() *MockTagsRepositoryMockRecorder {
	return m.recorder
}

// GetAllTags mocks base method.
func (m *MockTagsRepository) GetAllTags() ([]entities.Tag, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllTags")
	ret0, _ := ret[0].([]entities.Tag)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllTags indicates an expected call of GetAllTags.
func (mr *MockTagsRepositoryMockRecorder) GetAllTags() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllTags", reflect.TypeOf((*MockTagsRepository)(nil).GetAllTags))
}

// GetTagByID mocks base method.
func (m *MockTagsRepository) GetTagByID(id uint32) (*entities.Tag, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTagByID", id)
	ret0, _ := ret[0].(*entities.Tag)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTagByID indicates an expected call of GetTagByID.
func (mr *MockTagsRepositoryMockRecorder) GetTagByID(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTagByID", reflect.TypeOf((*MockTagsRepository)(nil).GetTagByID), id)
}

// GetToyTags mocks base method.
func (m *MockTagsRepository) GetToyTags(toyID uint64) ([]entities.Tag, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToyTags", toyID)
	ret0, _ := ret[0].([]entities.Tag)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetToyTags indicates an expected call of GetToyTags.
func (mr *MockTagsRepositoryMockRecorder) GetToyTags(toyID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToyTags", reflect.TypeOf((*MockTagsRepository)(nil).GetToyTags), toyID)
}
