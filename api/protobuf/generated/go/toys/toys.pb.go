// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: toys/toys.proto

package toys

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddToyIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      uint64   `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price       float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	Quantity    uint32   `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	CategoryID  uint32   `protobuf:"varint,6,opt,name=categoryID,proto3" json:"categoryID,omitempty"`
	TagIDs      []uint32 `protobuf:"varint,7,rep,packed,name=tagIDs,proto3" json:"tagIDs,omitempty"`
	Attachments []string `protobuf:"bytes,8,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *AddToyIn) Reset() {
	*x = AddToyIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toys_toys_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToyIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToyIn) ProtoMessage() {}

func (x *AddToyIn) ProtoReflect() protoreflect.Message {
	mi := &file_toys_toys_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToyIn.ProtoReflect.Descriptor instead.
func (*AddToyIn) Descriptor() ([]byte, []int) {
	return file_toys_toys_proto_rawDescGZIP(), []int{0}
}

func (x *AddToyIn) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AddToyIn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddToyIn) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddToyIn) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AddToyIn) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *AddToyIn) GetCategoryID() uint32 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *AddToyIn) GetTagIDs() []uint32 {
	if x != nil {
		return x.TagIDs
	}
	return nil
}

func (x *AddToyIn) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type AddToyOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToyID uint64 `protobuf:"varint,1,opt,name=toyID,proto3" json:"toyID,omitempty"`
}

func (x *AddToyOut) Reset() {
	*x = AddToyOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toys_toys_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToyOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToyOut) ProtoMessage() {}

func (x *AddToyOut) ProtoReflect() protoreflect.Message {
	mi := &file_toys_toys_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToyOut.ProtoReflect.Descriptor instead.
func (*AddToyOut) Descriptor() ([]byte, []int) {
	return file_toys_toys_proto_rawDescGZIP(), []int{1}
}

func (x *AddToyOut) GetToyID() uint64 {
	if x != nil {
		return x.ToyID
	}
	return 0
}

type GetToyIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetToyIn) Reset() {
	*x = GetToyIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toys_toys_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToyIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToyIn) ProtoMessage() {}

func (x *GetToyIn) ProtoReflect() protoreflect.Message {
	mi := &file_toys_toys_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToyIn.ProtoReflect.Descriptor instead.
func (*GetToyIn) Descriptor() ([]byte, []int) {
	return file_toys_toys_proto_rawDescGZIP(), []int{2}
}

func (x *GetToyIn) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ToyID     uint64                 `protobuf:"varint,2,opt,name=toyID,proto3" json:"toyID,omitempty"`
	Link      string                 `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toys_toys_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_toys_toys_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_toys_toys_proto_rawDescGZIP(), []int{3}
}

func (x *Attachment) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Attachment) GetToyID() uint64 {
	if x != nil {
		return x.ToyID
	}
	return 0
}

func (x *Attachment) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Attachment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Attachment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetToyOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	MasterID    uint64                 `protobuf:"varint,2,opt,name=masterID,proto3" json:"masterID,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Price       float32                `protobuf:"fixed32,5,opt,name=price,proto3" json:"price,omitempty"`
	Quantity    uint32                 `protobuf:"varint,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
	CategoryID  uint32                 `protobuf:"varint,7,opt,name=categoryID,proto3" json:"categoryID,omitempty"`
	Tags        []*GetTagOut           `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	Attachments []*Attachment          `protobuf:"bytes,9,rep,name=attachments,proto3" json:"attachments,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *GetToyOut) Reset() {
	*x = GetToyOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toys_toys_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToyOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToyOut) ProtoMessage() {}

func (x *GetToyOut) ProtoReflect() protoreflect.Message {
	mi := &file_toys_toys_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToyOut.ProtoReflect.Descriptor instead.
func (*GetToyOut) Descriptor() ([]byte, []int) {
	return file_toys_toys_proto_rawDescGZIP(), []int{4}
}

func (x *GetToyOut) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *GetToyOut) GetMasterID() uint64 {
	if x != nil {
		return x.MasterID
	}
	return 0
}

func (x *GetToyOut) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetToyOut) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetToyOut) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GetToyOut) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *GetToyOut) GetCategoryID() uint32 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *GetToyOut) GetTags() []*GetTagOut {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GetToyOut) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *GetToyOut) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetToyOut) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetToysIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *Pagination  `protobuf:"bytes,1,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	Filters    *ToysFilters `protobuf:"bytes,2,opt,name=filters,proto3,oneof" json:"filters,omitempty"`
}

func (x *GetToysIn) Reset() {
	*x = GetToysIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toys_toys_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToysIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToysIn) ProtoMessage() {}

func (x *GetToysIn) ProtoReflect() protoreflect.Message {
	mi := &file_toys_toys_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToysIn.ProtoReflect.Descriptor instead.
func (*GetToysIn) Descriptor() ([]byte, []int) {
	return file_toys_toys_proto_rawDescGZIP(), []int{5}
}

func (x *GetToysIn) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetToysIn) GetFilters() *ToysFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

type GetToysOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Toys []*GetToyOut `protobuf:"bytes,1,rep,name=toys,proto3" json:"toys,omitempty"`
}

func (x *GetToysOut) Reset() {
	*x = GetToysOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toys_toys_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToysOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToysOut) ProtoMessage() {}

func (x *GetToysOut) ProtoReflect() protoreflect.Message {
	mi := &file_toys_toys_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToysOut.ProtoReflect.Descriptor instead.
func (*GetToysOut) Descriptor() ([]byte, []int) {
	return file_toys_toys_proto_rawDescGZIP(), []int{6}
}

func (x *GetToysOut) GetToys() []*GetToyOut {
	if x != nil {
		return x.Toys
	}
	return nil
}

type GetMasterToysIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterID   uint64       `protobuf:"varint,1,opt,name=masterID,proto3" json:"masterID,omitempty"`
	Pagination *Pagination  `protobuf:"bytes,2,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	Filters    *ToysFilters `protobuf:"bytes,3,opt,name=filters,proto3,oneof" json:"filters,omitempty"`
}

func (x *GetMasterToysIn) Reset() {
	*x = GetMasterToysIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toys_toys_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMasterToysIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMasterToysIn) ProtoMessage() {}

func (x *GetMasterToysIn) ProtoReflect() protoreflect.Message {
	mi := &file_toys_toys_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMasterToysIn.ProtoReflect.Descriptor instead.
func (*GetMasterToysIn) Descriptor() ([]byte, []int) {
	return file_toys_toys_proto_rawDescGZIP(), []int{7}
}

func (x *GetMasterToysIn) GetMasterID() uint64 {
	if x != nil {
		return x.MasterID
	}
	return 0
}

func (x *GetMasterToysIn) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetMasterToysIn) GetFilters() *ToysFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

type GetUserToysIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     uint64       `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Pagination *Pagination  `protobuf:"bytes,2,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	Filters    *ToysFilters `protobuf:"bytes,3,opt,name=filters,proto3,oneof" json:"filters,omitempty"`
}

func (x *GetUserToysIn) Reset() {
	*x = GetUserToysIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toys_toys_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserToysIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserToysIn) ProtoMessage() {}

func (x *GetUserToysIn) ProtoReflect() protoreflect.Message {
	mi := &file_toys_toys_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserToysIn.ProtoReflect.Descriptor instead.
func (*GetUserToysIn) Descriptor() ([]byte, []int) {
	return file_toys_toys_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserToysIn) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetUserToysIn) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetUserToysIn) GetFilters() *ToysFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

type DeleteToyIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteToyIn) Reset() {
	*x = DeleteToyIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toys_toys_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteToyIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteToyIn) ProtoMessage() {}

func (x *DeleteToyIn) ProtoReflect() protoreflect.Message {
	mi := &file_toys_toys_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteToyIn.ProtoReflect.Descriptor instead.
func (*DeleteToyIn) Descriptor() ([]byte, []int) {
	return file_toys_toys_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteToyIn) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type UpdateToyIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          uint64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        *string  `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description *string  `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Price       *float32 `protobuf:"fixed32,4,opt,name=price,proto3,oneof" json:"price,omitempty"`
	Quantity    *uint32  `protobuf:"varint,5,opt,name=quantity,proto3,oneof" json:"quantity,omitempty"`
	CategoryID  *uint32  `protobuf:"varint,6,opt,name=categoryID,proto3,oneof" json:"categoryID,omitempty"`
	TagIDs      []uint32 `protobuf:"varint,7,rep,packed,name=tagIDs,proto3" json:"tagIDs,omitempty"`
	Attachments []string `protobuf:"bytes,8,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *UpdateToyIn) Reset() {
	*x = UpdateToyIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toys_toys_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateToyIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateToyIn) ProtoMessage() {}

func (x *UpdateToyIn) ProtoReflect() protoreflect.Message {
	mi := &file_toys_toys_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateToyIn.ProtoReflect.Descriptor instead.
func (*UpdateToyIn) Descriptor() ([]byte, []int) {
	return file_toys_toys_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateToyIn) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateToyIn) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateToyIn) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateToyIn) GetPrice() float32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *UpdateToyIn) GetQuantity() uint32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

func (x *UpdateToyIn) GetCategoryID() uint32 {
	if x != nil && x.CategoryID != nil {
		return *x.CategoryID
	}
	return 0
}

func (x *UpdateToyIn) GetTagIDs() []uint32 {
	if x != nil {
		return x.TagIDs
	}
	return nil
}

func (x *UpdateToyIn) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type CountToysIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters *ToysFilters `protobuf:"bytes,1,opt,name=filters,proto3,oneof" json:"filters,omitempty"`
}

func (x *CountToysIn) Reset() {
	*x = CountToysIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toys_toys_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountToysIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountToysIn) ProtoMessage() {}

func (x *CountToysIn) ProtoReflect() protoreflect.Message {
	mi := &file_toys_toys_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountToysIn.ProtoReflect.Descriptor instead.
func (*CountToysIn) Descriptor() ([]byte, []int) {
	return file_toys_toys_proto_rawDescGZIP(), []int{11}
}

func (x *CountToysIn) GetFilters() *ToysFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

type CountMasterToysIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterID uint64       `protobuf:"varint,1,opt,name=masterID,proto3" json:"masterID,omitempty"`
	Filters  *ToysFilters `protobuf:"bytes,2,opt,name=filters,proto3,oneof" json:"filters,omitempty"`
}

func (x *CountMasterToysIn) Reset() {
	*x = CountMasterToysIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toys_toys_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountMasterToysIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountMasterToysIn) ProtoMessage() {}

func (x *CountMasterToysIn) ProtoReflect() protoreflect.Message {
	mi := &file_toys_toys_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountMasterToysIn.ProtoReflect.Descriptor instead.
func (*CountMasterToysIn) Descriptor() ([]byte, []int) {
	return file_toys_toys_proto_rawDescGZIP(), []int{12}
}

func (x *CountMasterToysIn) GetMasterID() uint64 {
	if x != nil {
		return x.MasterID
	}
	return 0
}

func (x *CountMasterToysIn) GetFilters() *ToysFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

type CountUserToysIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  uint64       `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Filters *ToysFilters `protobuf:"bytes,2,opt,name=filters,proto3,oneof" json:"filters,omitempty"`
}

func (x *CountUserToysIn) Reset() {
	*x = CountUserToysIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toys_toys_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountUserToysIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountUserToysIn) ProtoMessage() {}

func (x *CountUserToysIn) ProtoReflect() protoreflect.Message {
	mi := &file_toys_toys_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountUserToysIn.ProtoReflect.Descriptor instead.
func (*CountUserToysIn) Descriptor() ([]byte, []int) {
	return file_toys_toys_proto_rawDescGZIP(), []int{13}
}

func (x *CountUserToysIn) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *CountUserToysIn) GetFilters() *ToysFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

type CountOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountOut) Reset() {
	*x = CountOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toys_toys_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountOut) ProtoMessage() {}

func (x *CountOut) ProtoReflect() protoreflect.Message {
	mi := &file_toys_toys_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountOut.ProtoReflect.Descriptor instead.
func (*CountOut) Descriptor() ([]byte, []int) {
	return file_toys_toys_proto_rawDescGZIP(), []int{14}
}

func (x *CountOut) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ToysFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search              *string  `protobuf:"bytes,1,opt,name=search,proto3,oneof" json:"search,omitempty"`
	PriceCeil           *float32 `protobuf:"fixed32,2,opt,name=priceCeil,proto3,oneof" json:"priceCeil,omitempty"`        // max price
	PriceFloor          *float32 `protobuf:"fixed32,3,opt,name=priceFloor,proto3,oneof" json:"priceFloor,omitempty"`      // min price
	QuantityFloor       *uint32  `protobuf:"varint,4,opt,name=quantityFloor,proto3,oneof" json:"quantityFloor,omitempty"` // min quantity
	CategoryIDs         []uint32 `protobuf:"varint,5,rep,packed,name=categoryIDs,proto3" json:"categoryIDs,omitempty"`
	TagIDs              []uint32 `protobuf:"varint,6,rep,packed,name=tagIDs,proto3" json:"tagIDs,omitempty"`
	CreatedAtOrderByAsc *bool    `protobuf:"varint,7,opt,name=createdAtOrderByAsc,proto3,oneof" json:"createdAtOrderByAsc,omitempty"`
}

func (x *ToysFilters) Reset() {
	*x = ToysFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toys_toys_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToysFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToysFilters) ProtoMessage() {}

func (x *ToysFilters) ProtoReflect() protoreflect.Message {
	mi := &file_toys_toys_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToysFilters.ProtoReflect.Descriptor instead.
func (*ToysFilters) Descriptor() ([]byte, []int) {
	return file_toys_toys_proto_rawDescGZIP(), []int{15}
}

func (x *ToysFilters) GetSearch() string {
	if x != nil && x.Search != nil {
		return *x.Search
	}
	return ""
}

func (x *ToysFilters) GetPriceCeil() float32 {
	if x != nil && x.PriceCeil != nil {
		return *x.PriceCeil
	}
	return 0
}

func (x *ToysFilters) GetPriceFloor() float32 {
	if x != nil && x.PriceFloor != nil {
		return *x.PriceFloor
	}
	return 0
}

func (x *ToysFilters) GetQuantityFloor() uint32 {
	if x != nil && x.QuantityFloor != nil {
		return *x.QuantityFloor
	}
	return 0
}

func (x *ToysFilters) GetCategoryIDs() []uint32 {
	if x != nil {
		return x.CategoryIDs
	}
	return nil
}

func (x *ToysFilters) GetTagIDs() []uint32 {
	if x != nil {
		return x.TagIDs
	}
	return nil
}

func (x *ToysFilters) GetCreatedAtOrderByAsc() bool {
	if x != nil && x.CreatedAtOrderByAsc != nil {
		return *x.CreatedAtOrderByAsc
	}
	return false
}

var File_toys_toys_proto protoreflect.FileDescriptor

var file_toys_toys_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x6f, 0x79, 0x73, 0x2f, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x74, 0x6f, 0x79, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x74, 0x6f, 0x79, 0x73, 0x2f, 0x74, 0x61, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x74, 0x6f, 0x79, 0x73, 0x2f, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe4, 0x01, 0x0a, 0x08, 0x41,
	0x64, 0x64, 0x54, 0x6f, 0x79, 0x49, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x49, 0x44,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x44, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x21, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x79, 0x4f, 0x75, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74,
	0x6f, 0x79, 0x49, 0x44, 0x22, 0x1a, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x79, 0x49, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44,
	0x22, 0xba, 0x01, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x74, 0x6f, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8c, 0x03,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x79, 0x4f, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12,
	0x23, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x74, 0x61, 0x67, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x4f, 0x75, 0x74, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x6f, 0x79, 0x73,
	0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x92, 0x01, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x79, 0x73, 0x49, 0x6e, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x54, 0x6f, 0x79,
	0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x48, 0x01, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x22, 0x31, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x79, 0x73, 0x4f, 0x75, 0x74, 0x12,
	0x23, 0x0a, 0x04, 0x74, 0x6f, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x74, 0x6f, 0x79, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x79, 0x4f, 0x75, 0x74, 0x52, 0x04,
	0x74, 0x6f, 0x79, 0x73, 0x22, 0xb4, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x6f, 0x79, 0x73, 0x49, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x30,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x54, 0x6f, 0x79, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x48, 0x01, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x79, 0x73, 0x49, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x54, 0x6f, 0x79, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x48, 0x01, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x88, 0x01,
	0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x1d, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x79, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x22, 0xb7, 0x02, 0x0a, 0x0b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x79, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x67, 0x49, 0x44, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61,
	0x67, 0x49, 0x44, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x44, 0x22, 0x4b, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f,
	0x79, 0x73, 0x49, 0x6e, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x54, 0x6f, 0x79,
	0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x22, 0x6d, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x6f, 0x79, 0x73, 0x49, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x54, 0x6f, 0x79, 0x73,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x22, 0x67, 0x0a, 0x0f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f,
	0x79, 0x73, 0x49, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x74, 0x6f, 0x79, 0x73, 0x2e, 0x54, 0x6f, 0x79, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x48, 0x00, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x20, 0x0a, 0x08, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe0, 0x02, 0x0a,
	0x0b, 0x54, 0x6f, 0x79, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x43, 0x65, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x09,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x65, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x48, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x29, 0x0a, 0x0d, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x0d, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x67, 0x49, 0x44, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06,
	0x74, 0x61, 0x67, 0x49, 0x44, 0x73, 0x12, 0x35, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x41, 0x73, 0x63, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x41, 0x73, 0x63, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x43, 0x65, 0x69, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x41, 0x73, 0x63, 0x32,
	0xa9, 0x04, 0x0a, 0x0b, 0x54, 0x6f, 0x79, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x2b, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x79, 0x12, 0x0e, 0x2e, 0x74, 0x6f, 0x79, 0x73,
	0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x79, 0x49, 0x6e, 0x1a, 0x0f, 0x2e, 0x74, 0x6f, 0x79, 0x73,
	0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x79, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x06,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x79, 0x12, 0x0e, 0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x79, 0x49, 0x6e, 0x1a, 0x0f, 0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x79, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x79, 0x73, 0x12, 0x0f, 0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x79, 0x73, 0x49, 0x6e, 0x1a, 0x10, 0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x79, 0x73, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x09, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x6f, 0x79, 0x73, 0x12, 0x11, 0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x6f, 0x79, 0x73, 0x49, 0x6e, 0x1a, 0x0e, 0x2e, 0x74, 0x6f, 0x79, 0x73,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x79, 0x73, 0x12, 0x15, 0x2e, 0x74,
	0x6f, 0x79, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x79,
	0x73, 0x49, 0x6e, 0x1a, 0x10, 0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x79, 0x73, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0f, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x79, 0x73, 0x12, 0x17, 0x2e, 0x74, 0x6f, 0x79,
	0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x79,
	0x73, 0x49, 0x6e, 0x1a, 0x0e, 0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x79, 0x73, 0x12, 0x13, 0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x6f, 0x79, 0x73, 0x49, 0x6e, 0x1a, 0x10, 0x2e, 0x74, 0x6f, 0x79, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x79, 0x73, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x38, 0x0a,
	0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x79, 0x73, 0x12, 0x15,
	0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x6f, 0x79, 0x73, 0x49, 0x6e, 0x1a, 0x0e, 0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x6f, 0x79, 0x12, 0x11, 0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x6f, 0x79, 0x49, 0x6e, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x79, 0x12, 0x11,
	0x2e, 0x74, 0x6f, 0x79, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x79, 0x49,
	0x6e, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x4b, 0x68, 0x6f, 0x72, 0x6b,
	0x6f, 0x76, 0x2f, 0x68, 0x6d, 0x74, 0x6d, 0x2d, 0x74, 0x6f, 0x79, 0x73, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x6f, 0x79, 0x73, 0x3b, 0x74,
	0x6f, 0x79, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_toys_toys_proto_rawDescOnce sync.Once
	file_toys_toys_proto_rawDescData = file_toys_toys_proto_rawDesc
)

func file_toys_toys_proto_rawDescGZIP() []byte {
	file_toys_toys_proto_rawDescOnce.Do(func() {
		file_toys_toys_proto_rawDescData = protoimpl.X.CompressGZIP(file_toys_toys_proto_rawDescData)
	})
	return file_toys_toys_proto_rawDescData
}

var file_toys_toys_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_toys_toys_proto_goTypes = []interface{}{
	(*AddToyIn)(nil),              // 0: toys.AddToyIn
	(*AddToyOut)(nil),             // 1: toys.AddToyOut
	(*GetToyIn)(nil),              // 2: toys.GetToyIn
	(*Attachment)(nil),            // 3: toys.Attachment
	(*GetToyOut)(nil),             // 4: toys.GetToyOut
	(*GetToysIn)(nil),             // 5: toys.GetToysIn
	(*GetToysOut)(nil),            // 6: toys.GetToysOut
	(*GetMasterToysIn)(nil),       // 7: toys.GetMasterToysIn
	(*GetUserToysIn)(nil),         // 8: toys.GetUserToysIn
	(*DeleteToyIn)(nil),           // 9: toys.DeleteToyIn
	(*UpdateToyIn)(nil),           // 10: toys.UpdateToyIn
	(*CountToysIn)(nil),           // 11: toys.CountToysIn
	(*CountMasterToysIn)(nil),     // 12: toys.CountMasterToysIn
	(*CountUserToysIn)(nil),       // 13: toys.CountUserToysIn
	(*CountOut)(nil),              // 14: toys.CountOut
	(*ToysFilters)(nil),           // 15: toys.ToysFilters
	(*timestamppb.Timestamp)(nil), // 16: google.protobuf.Timestamp
	(*GetTagOut)(nil),             // 17: tags.GetTagOut
	(*Pagination)(nil),            // 18: masters.Pagination
	(*emptypb.Empty)(nil),         // 19: google.protobuf.Empty
}
var file_toys_toys_proto_depIdxs = []int32{
	16, // 0: toys.Attachment.createdAt:type_name -> google.protobuf.Timestamp
	16, // 1: toys.Attachment.updatedAt:type_name -> google.protobuf.Timestamp
	17, // 2: toys.GetToyOut.tags:type_name -> tags.GetTagOut
	3,  // 3: toys.GetToyOut.attachments:type_name -> toys.Attachment
	16, // 4: toys.GetToyOut.createdAt:type_name -> google.protobuf.Timestamp
	16, // 5: toys.GetToyOut.updatedAt:type_name -> google.protobuf.Timestamp
	18, // 6: toys.GetToysIn.pagination:type_name -> masters.Pagination
	15, // 7: toys.GetToysIn.filters:type_name -> toys.ToysFilters
	4,  // 8: toys.GetToysOut.toys:type_name -> toys.GetToyOut
	18, // 9: toys.GetMasterToysIn.pagination:type_name -> masters.Pagination
	15, // 10: toys.GetMasterToysIn.filters:type_name -> toys.ToysFilters
	18, // 11: toys.GetUserToysIn.pagination:type_name -> masters.Pagination
	15, // 12: toys.GetUserToysIn.filters:type_name -> toys.ToysFilters
	15, // 13: toys.CountToysIn.filters:type_name -> toys.ToysFilters
	15, // 14: toys.CountMasterToysIn.filters:type_name -> toys.ToysFilters
	15, // 15: toys.CountUserToysIn.filters:type_name -> toys.ToysFilters
	0,  // 16: toys.ToysService.AddToy:input_type -> toys.AddToyIn
	2,  // 17: toys.ToysService.GetToy:input_type -> toys.GetToyIn
	5,  // 18: toys.ToysService.GetToys:input_type -> toys.GetToysIn
	11, // 19: toys.ToysService.CountToys:input_type -> toys.CountToysIn
	7,  // 20: toys.ToysService.GetMasterToys:input_type -> toys.GetMasterToysIn
	12, // 21: toys.ToysService.CountMasterToys:input_type -> toys.CountMasterToysIn
	8,  // 22: toys.ToysService.GetUserToys:input_type -> toys.GetUserToysIn
	13, // 23: toys.ToysService.CountUserToys:input_type -> toys.CountUserToysIn
	9,  // 24: toys.ToysService.DeleteToy:input_type -> toys.DeleteToyIn
	10, // 25: toys.ToysService.UpdateToy:input_type -> toys.UpdateToyIn
	1,  // 26: toys.ToysService.AddToy:output_type -> toys.AddToyOut
	4,  // 27: toys.ToysService.GetToy:output_type -> toys.GetToyOut
	6,  // 28: toys.ToysService.GetToys:output_type -> toys.GetToysOut
	14, // 29: toys.ToysService.CountToys:output_type -> toys.CountOut
	6,  // 30: toys.ToysService.GetMasterToys:output_type -> toys.GetToysOut
	14, // 31: toys.ToysService.CountMasterToys:output_type -> toys.CountOut
	6,  // 32: toys.ToysService.GetUserToys:output_type -> toys.GetToysOut
	14, // 33: toys.ToysService.CountUserToys:output_type -> toys.CountOut
	19, // 34: toys.ToysService.DeleteToy:output_type -> google.protobuf.Empty
	19, // 35: toys.ToysService.UpdateToy:output_type -> google.protobuf.Empty
	26, // [26:36] is the sub-list for method output_type
	16, // [16:26] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_toys_toys_proto_init() }
func file_toys_toys_proto_init() {
	if File_toys_toys_proto != nil {
		return
	}
	file_toys_tags_proto_init()
	file_toys_masters_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_toys_toys_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToyIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toys_toys_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToyOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toys_toys_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToyIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toys_toys_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toys_toys_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToyOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toys_toys_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToysIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toys_toys_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToysOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toys_toys_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMasterToysIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toys_toys_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserToysIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toys_toys_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteToyIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toys_toys_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateToyIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toys_toys_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountToysIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toys_toys_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountMasterToysIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toys_toys_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountUserToysIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toys_toys_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toys_toys_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToysFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_toys_toys_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_toys_toys_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_toys_toys_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_toys_toys_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_toys_toys_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_toys_toys_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_toys_toys_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_toys_toys_proto_msgTypes[15].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_toys_toys_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_toys_toys_proto_goTypes,
		DependencyIndexes: file_toys_toys_proto_depIdxs,
		MessageInfos:      file_toys_toys_proto_msgTypes,
	}.Build()
	File_toys_toys_proto = out.File
	file_toys_toys_proto_rawDesc = nil
	file_toys_toys_proto_goTypes = nil
	file_toys_toys_proto_depIdxs = nil
}
